cat << l < file
<< l < file
| | | |
var="< file cat"
var+=bonjour
var=toi=moi
cat | cat > file
cmd < file < file1
var=salut ; echo $var
echo -nnnnn ; echo -n-n-n-n-n; echo -nnaaaa ; echo -n -n -n -n -n -n
cd double args
export
echo "<3" >> "<3"
cd ../../../../../
cat < a > b
cd /
cd -
cat < "file"
cat | cat | ls
$var="ec" ; $var"ho" a
cat > f1 | cat > f2 | ls
unsert arg1 arg2
cd $PWD hi
echo < Makefile bonjour
$EMPTY (must reset exit code)
$EMPTY echo hi
export var ; env | grep var ; export | grep var
unset HOME ; cd ~
export HELLO=123 A- WORLD=456 (check exit code)
echo txt > $var
export $ARG
ctl + D in heredoc
export var="echo world" ; $var
export var= "      world" ; echo $var
var="ec" ; $var"ho" a
<< "<<" cat
echo bonsoir > file | cat < file
ls > f | ls > f1
ls | ls | ls | ls | ls | ls | ls | ls
export var=salut > file
var = "echo this" ; var1 = "c'est" ; var2 = 'c"est' ; $var $var $var
ex"it" (has to exit and print exit);
exit | exit
exit | ls
exit 178036478945602741 (some big overflow nbr)
echo a > out1| <<out2 >| cat
echo a > out1| <<out2> | cat
"'ec'ho" salut
echo salut "" les "" ami
grep echo < tests.txt > file2
cat | cat | ls
cat | cat |
github ; Lucas Kuhn minishell tester
> file
<>
echo a > file1 <<
< grep a somefile
cat > file1  < infile1  >>file2 <infile2
echo a > file1 | grep a
grep a
./minishell
cat << $HOME
<< "stop" cat -> dont expand values in the heredoc
<< stop cat -> expand values in the heredoc
echo a | pwd > file1
cat << "st""op"
cat << "st"op
echo a >| grep a
cat |< file1
cat | < file1
/bin/ls
../some_exec
> existing_file
> non_existing_file
> file1 >file2 -> create both files
echo > file1 > file2 -> create both files and write in lastone
""<<123
